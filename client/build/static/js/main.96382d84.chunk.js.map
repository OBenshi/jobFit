{"version":3,"sources":["GraphQL/Queries.tsx","context/AuthContext.tsx","GraphQL/Mutations.tsx","img/newHead2.png","img/descImg.jpeg","img/head2.jpeg","style/useStyles.tsx","components/DrawList.tsx","components/Appbar.tsx","img/bground.jpeg","Views/LogIn.tsx","img/home.jpg","components/NoUserHome.tsx","components/UserHome.tsx","Views/Home.tsx","img/background.jpg","Views/SignUp.tsx","img/head.jpeg","components/CommentBox.tsx","components/DisplayTextComp.tsx","Views/DisplayText.tsx","components/AddText.tsx","Views/AddDatingText.tsx","components/PrivateRoute.tsx","components/UpdateProfile.tsx","Views/Dashboard.tsx","Views/SrchRes.tsx","style/theme.tsx","AAbla.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["DATING_TEXT","gql","TONE_OF_TEXT","USER","SEARCH_TEXT","initAuthContext","isAuthenticated","user","setUser","setIsAuthenticated","AuthContext","createContext","AuthContextProvider","children","useState","token","window","localStorage","getItem","useQuery","data","error","loading","useEffect","console","log","Provider","value","LOGIN_USER","LOGOUT_USER","SIGN_UP_USER","UPDATE_USER","ADD_DATING","ADD_COMMENT","useStyles","makeStyles","theme","createStyles","rootOfroots","width","container","display","flexWrap","margin","spacing","loginBtn","marginTop","flexGrow","header","textAlign","background","palette","secondary","main","color","card","offset","mixins","toolbar","appbarRoot","marginBottom","menuButton","marginRight","title","fontWeight","breakpoints","up","Navtitle","search","position","borderRadius","shape","backgroundColor","alpha","common","white","marginLeft","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","list","fullList","footer","paper","textCont","longTextCont","cardImg","backgroundImage","descImg","backgroundPosition","backgroundSize","backgroundRepeat","heroContent","head2Img","heroButtons","homeItem","flexDirection","commentCardRoot","cardMedia","paddingTop","cardExpand","transform","duration","shortest","cardExpandOpen","cardAvatar","randColor","cardHead","paddingBottom","AmberSwitch","withStyles","switchBase","amber","checked","track","Switch","StyledRating","iconFilled","iconHover","Rating","webColors","Math","floor","random","length","DrawList","props","useContext","role","onClick","toggleDrawer","onKeyDown","List","Typography","align","variant","Divider","Link","component","RouterLink","to","ListItem","button","ListItemIcon","ListItemText","primary","username","handleLogout","SearchAppBar","classes","history","useHistory","drawerState","setDrawerState","useMutation","logoutUser","logOutMutation","searchTerm","setSearchTerm","searchText","variables","searchTextSearchTerm","searchData","refetch","event","a","preventDefault","removeItem","open","type","key","className","AppBar","style","imag","Toolbar","Grid","alignContent","item","IconButton","edge","Drawer","anchor","onClose","push","noWrap","location","pathname","match","InputBase","placeholder","root","input","inputProps","onKeyUp","target","dark","LogIn","emailRegEx","logIn","passwordError","setPasswordError","emailError","setEmailError","password","email","setInput","handleChange","e","name","backgroundStyles","noValidate","autoComplete","onSubmit","logInEmail","logInPassword","then","setItem","catch","alert","Card","CardHeader","CardContent","Alert","severity","TextField","fullWidth","id","label","onChange","eve","test","CardActions","Button","size","Arrow3","direction","fontSize","NoUserHome","xs","src","img","alt","paragraph","UserHome","toUpperCase","Home","SignUp","React","Date","selectedDate","setSelectedDate","passwordRef","useRef","firstNameErr","setFirstNameErr","lastNameErr","setLastNameErr","emailErr","setEmailErr","passwordErr","setPasswordErr","passwordConfirmErr","setPasswordConfirmErr","usernameErr","setUsernameErr","addUser","firstName","lastName","birthday","toISOString","sign","setSign","addUserUser","DatePicker","format","date","openTo","views","inputRef","current","toString","CommentBox","comments","map","comment","randomColor","avatar","Avatar","owner","subheader","postDate","toDateString","text","_id","onText","DisplayTextComp","aText","allText","expandedComment","setExpandedComment","commentRef","expandedAddComment","setExpandedAddComment","refetchQueries","query","addComment","setComment","handleExpandClick","num","disableSpacing","clsx","Collapse","in","timeout","unmountOnExit","TextareaAutosize","rows","ref","tag","addCommentComment","handleCommentSubmit","backGround","DisplayText","bg","undefined","message","allTexts","index","AddText","AddDatingTextMutation","addTextErr","xprivate","datingText","setDatingText","submit","setSubmit","textAnal","setTextAnal","aToneText","toneLoading","toneData","handleSubmit","addDatingTextText","toneResults","aTone","thv","minRows","FormControlLabel","control","Object","keys","tone","toneNum","round","defaultValue","getLabelText","precision","max","readOnly","icon","CircularProgress","stopPropagation","AddDatingText","gutterBottom","PrivateRoute","path","exact","UpdateProfile","updateUserProfileUser","successMsg","setSuccessMsg","setLoading","update","setUpdate","handleUpdate","updatedUser","updateUserProfile","indexOf","disabled","fontFamily","rootSnd","minWidth","details","content","flex","controls","dashCont","head","Dashboard","tabValue","setTabValue","slice","Tabs","newValue","indicatorColor","textColor","centered","Tab","hidden","datingTexts","SrchRes","orginalTerm","useParams","srchErr","srchLoading","srchData","resizeMode","createTheme","light","typography","h1","h2","h3","h4","h5","h6","fontStyle","maxWidth","media","expand","expandOpen","red","RecipeReviewCard","expanded","setExpanded","action","App","CssBaseline","ThemeProvider","utils","DateFnsUtils","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","render","ApolloProvider","StrictMode","document","getElementById"],"mappings":"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,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,aAKpBG,YAAa,CACXzD,UAAWV,EAAMQ,SAAS,GAC1BkC,QAAS1C,EAAMQ,QAAQ,IAEzB4D,SAAU,CACR/D,QAAS,OACTgE,cAAe,SACfxB,WAAY,SACZH,QAAS1C,EAAMQ,QAAQ,EAAG,IAI5B8D,gBAAiB,GAMjBC,UAAW,CACT5B,OAAQ,EACR6B,WAAY,UAEdC,WAAY,CACVC,UAAW,eACXlC,WAAY,OACZU,WAAYlD,EAAMmD,YAAYC,OAAO,YAAa,CAChDuB,SAAU3E,EAAMmD,YAAYwB,SAASC,YAGzCC,eAAgB,CACdH,UAAW,kBAEbI,WAAY,CAEV1C,gBAAiB2C,IAEnBC,SAAU,CAER5C,gBAAiB,0BAEjBoC,WAAYxE,EAAMQ,QAAQ,GAE1ByE,cAAejF,EAAMQ,QAAQ,SActB0E,GAAcC,aAAW,CACpCC,WAAY,CACVlE,MAAOmE,KAAM,KACb,YAAa,CACXnE,MAAOmE,KAAM,MAEf,qBAAsB,CACpBjD,gBAAiBiD,KAAM,OAG3BC,QAAS,GACTC,MAAO,IAXkBJ,CAYxBK,MAEUC,GAAeN,aAAW,CACrCO,WAAY,CACVxE,MAAO,WAETyE,UAAW,CACTzE,MAAO,YALiBiE,CAOzBS,MAEUC,GAAY,CACvB,OACA,aACA,SACA,iBACA,OACA,aACA,QACA,YACA,YACA,aACA,YACA,QACA,iBACA,UACA,OACA,WACA,WACA,gBACA,YACA,YACA,cACA,iBACA,aACA,aACA,UACA,aACA,eACA,gBACA,gBACA,aACA,WACA,cACA,aACA,YACA,cACA,UACA,YACA,OACA,YACA,QAEA,WACA,UACA,YACA,SACA,QACA,WACA,YACA,YACA,aACA,aACA,YACA,cACA,gBACA,eACA,iBACA,OACA,YACA,QACA,UACA,SACA,mBACA,aACA,eACA,eACA,iBACA,kBACA,oBACA,kBACA,kBACA,eACA,YACA,YACA,WACA,OACA,QACA,YACA,SACA,YACA,SACA,gBACA,YACA,gBACA,gBACA,aACA,YACA,OACA,OACA,OACA,aACA,SACA,gBACA,MACA,YACA,YACA,cAC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","file":"static/js/main.96382d84.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const DATING_TEXT = gql`\n  query Query {\n    allTexts {\n      _id\n      owner {\n        username\n      }\n      text\n      score\n      postDate\n      display\n      private\n      comments {\n        text\n        postDate\n        owner {\n          username\n        }\n        onText {\n          owner {\n            username\n          }\n          text\n        }\n      }\n    }\n  }\n`;\n\nexport const TONE_OF_TEXT = gql`\n  query Query($aToneText: String!) {\n    aTone(text: $aToneText)\n  }\n`;\n\nexport const USER = gql`\n  query Query($userId: ObjectID) {\n    user(_id: $userId) {\n      username\n      firstName\n      lastName\n      birthday\n      email\n      password\n      rank\n      loggedIn\n      datingTexts {\n        _id\n        text\n        score\n        owner {\n          _id\n          username\n        }\n        postDate\n        comments {\n          text\n          postDate\n          owner {\n            username\n          }\n          text\n          postDate\n        }\n      }\n      token\n    }\n  }\n`;\n\nexport const SEARCH_TEXT = gql`\n  query Query($searchTextSearchTerm: String!) {\n    searchText(searchTerm: $searchTextSearchTerm) {\n      _id\n      owner {\n        username\n      }\n      text\n      score\n      postDate\n      comments {\n        owner {\n          username\n        }\n        text\n        postDate\n      }\n      display\n      private\n    }\n  }\n`;\n","\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { USER } from \"../GraphQL/Queries\";\nimport { ObjectId } from \"mongodb\";\nimport { datingTextNs, commentsNs } from \"../../../server/src/@types\";\ninterface userProfile {\n  _id: ObjectId;\n  username: string;\n  firstName: string;\n  lastName: string;\n  birthday: string;\n  email: string;\n  password: string;\n  rank: number;\n  avatar?: string;\n  loggedIn: boolean;\n  datingTexts: Array<DatingText>;\n  comments: Array<Comment>;\n}\n\ninterface IAuthContext {\n  isAuthenticated: boolean;\n  user: userProfile | null;\n  setUser: React.Dispatch<React.SetStateAction<userProfile | null>>;\n  setIsAuthenticated: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst initAuthContext: IAuthContext = {\n  isAuthenticated: false,\n  user: null,\n  setUser: () => {},\n  setIsAuthenticated: () => {},\n};\n\nexport const AuthContext = createContext<IAuthContext>(initAuthContext);\n\nexport const AuthContextProvider: React.FC = ({ children }) => {\n  const [user, setUser] = useState(initAuthContext.user);\n  const [isAuthenticated, setIsAuthenticated] = useState(\n    initAuthContext.isAuthenticated\n  );\n  const token = window.localStorage.getItem(\"token\");\n  const { error, loading, data } = useQuery(USER);\n\n  useEffect(() => {\n    if (token !== null) {\n      console.log(token !== null, user);\n      console.log(data);\n      data && setUser(data.user);\n      setIsAuthenticated(true);\n    }\n    //console.log(user!==null && user.username);\n  }, [data]);\n\n  return (\n    <AuthContext.Provider\n      value={{ user, setUser, setIsAuthenticated, isAuthenticated }}\n    >\n      {\" \"}\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import { gql, useQuery } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation Mutation($logInEmail: String, $logInPassword: String) {\n    logIn(email: $logInEmail, password: $logInPassword) {\n      _id\n      username\n      firstName\n      lastName\n      birthday\n      email\n      password\n      rank\n      loggedIn\n      datingTexts {\n        _id\n        owner {\n          username\n        }\n        text\n        score\n        postDate\n        display\n        private\n        comments {\n          text\n          postDate\n          owner {\n            username\n          }\n          onText {\n            owner {\n              username\n            }\n            text\n          }\n        }\n      }\n      # datingTexts {\n      #   _id\n      #   text\n      #   score\n      #   owner {\n      #     _id\n      #     username\n      #   }\n      #   postDate\n      #   comments {\n      #     text\n      #     postDate\n      #     owner {\n      #       username\n      #     }\n      #     text\n      #     postDate\n      #   }\n      # }\n      token\n    }\n  }\n`;\n\nexport const LOGOUT_USER = gql`\n  mutation Mutation {\n    logOut\n  }\n`;\n\nexport const SIGN_UP_USER = gql`\n  mutation Mutation($addUserUser: newUserInput!) {\n    addUser(user: $addUserUser) {\n      username\n      firstName\n      lastName\n      email\n      password\n      token\n    }\n  }\n`;\n\nexport const UPDATE_USER = gql`\n  mutation UpdateUserProfileMutation($updateUserProfileUser: updateUserInput!) {\n    updateUserProfile(user: $updateUserProfileUser) {\n      _id\n      username\n      firstName\n      lastName\n      birthday\n      email\n      password\n      rank\n      # avatar\n      token\n    }\n  }\n`;\n\nexport const ADD_DATING = gql`\n  mutation Mutation($addDatingTextText: newDTI!) {\n    addDatingText(text: $addDatingTextText) {\n      text\n      postDate\n      private\n    }\n  }\n`;\n\nexport const ADD_COMMENT = gql`\n  mutation Mutation($addCommentComment: newComment) {\n    addComment(comment: $addCommentComment) {\n      text\n      onText {\n        text\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/newHead2.f96ee41f.png\";","export default __webpack_public_path__ + \"static/media/descImg.fcdb4cfb.jpeg\";","export default __webpack_public_path__ + \"static/media/head2.becd63e0.jpeg\";","import {\n  withStyles,\n  createStyles,\n  makeStyles,\n  Theme,\n  alpha,\n} from '@material-ui/core/styles';\nimport { purple, amber, yellow, red } from '@material-ui/core/colors';\nimport Rating from '@material-ui/lab/Rating';\nimport descImg from '../img/descImg.jpeg';\nimport head2Img from '../img/head2.jpeg';\n\nimport Switch, { SwitchClassKey, SwitchProps } from '@material-ui/core/Switch';\n\nimport bg from '../img/bg2.jpg';\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    rootOfroots: {\n      width: '100vw',\n    },\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: 360,\n      margin: `${theme.spacing(0)} auto`,\n    },\n    loginBtn: {\n      marginTop: theme.spacing(2),\n      flexGrow: 1,\n    },\n    header: {\n      textAlign: 'center',\n      background: theme.palette.secondary.main,\n      color: '#fff',\n    },\n    card: {\n      marginTop: theme.spacing(5),\n    },\n    offset: theme.mixins.toolbar,\n\n    appbarRoot: {\n      flexGrow: 1,\n      marginBottom: theme.spacing(2),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      display: 'none',\n      fontWeight: 500,\n      [theme.breakpoints.up('xs')]: {\n        display: 'block',\n      },\n    },\n    Navtitle: {\n      display: 'none',\n      fontWeight: 500,\n      [theme.breakpoints.up('xs')]: {\n        display: 'block',\n      },\n      background: 'rgba(255,255,255,0.7)',\n      borderRadius: '99999999999999999999999999999px',\n    },\n    search: {\n      flexGrow: 1,\n\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: alpha(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\n      },\n      marginLeft: 0,\n      width: '30%',\n      [theme.breakpoints.up('xs')]: {\n        marginLeft: theme.spacing(2),\n        width: '30%',\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        width: '12ch',\n        '&:focus': {\n          width: '20ch',\n        },\n      },\n    },\n    list: {\n      width: 250,\n    },\n    fullList: {\n      width: 'auto',\n    },\n    footer: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(6),\n    },\n    textCont: {\n      background: 'rgba(255,255,255,0.7)',\n      borderRadius: '99999999999999999999999999999px',\n    },\n    longTextCont: {\n      // background: 'rgba(255,255,255,0.7)',\n\n      backgroundColor: 'rgba(255, 244, 128, 0.57)',\n\n      // borderRadius: '99999999999999999999999999999px',\n    },\n    cardImg: {\n      backgroundImage: `url(${descImg})`,\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      backgroundRepeat: 'no-repeat',\n      width: '100%',\n      height: '600px',\n      marginTop: '0px',\n      display: 'flex',\n      // flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      // alignContent: 'center',\n    },\n    heroContent: {\n      // backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(1, 0, 6),\n      backgroundImage: `url(${head2Img})`,\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      backgroundRepeat: 'no-repeat',\n      // width: '100%',\n      // height: '300px',\n      // marginTop: '12px',\n    },\n    heroButtons: {\n      marginTop: theme.spacing(-2),\n      padding: theme.spacing(0),\n    },\n    homeItem: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: theme.spacing(0, 5),\n      // marginTop: '80px',\n    },\n\n    commentCardRoot: {\n      // backgroundColor: `${alpha(theme.palette.background.paper, 0.2)}`,\n      // backgroundColor: 'rgba(255, 244, 128, 0.57)',\n      // rgba(255, 244, 128, 0.57)\n      // backgroundColor: '#fffde7',#fffbe7\n    },\n    cardMedia: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    cardExpand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    cardExpandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    cardAvatar: {\n      // backgroundColor: red[500],\n      backgroundColor: randColor,\n    },\n    cardHead: {\n      // backgroundColor: 'rgba(255, 244, 128,1)',\n      backgroundColor: 'rgba(212, 175, 53, 0.6)',\n      // backgroundColor: theme.palette.secondary.light,\n      paddingTop: theme.spacing(1),\n\n      paddingBottom: theme.spacing(1),\n    },\n  })\n);\n\n// export const backgroundStyles = {\n//   backgroundImage: `url(${bg})`,\n//   backgroundPosition: \"center\",\n//   backgroundSize: \"cover\",\n//   backgroundRepeat: \"no-repeat\",\n//   width: \"100vw\",\n//   height: \"100vh\",\n// };\n\nexport const AmberSwitch = withStyles({\n  switchBase: {\n    color: amber[300],\n    '&$checked': {\n      color: amber[500],\n    },\n    '&$checked + $track': {\n      backgroundColor: amber[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nexport const StyledRating = withStyles({\n  iconFilled: {\n    color: '#ff6d75',\n  },\n  iconHover: {\n    color: '#ff3d47',\n  },\n})(Rating);\n\nexport const webColors = [\n  'Aqua',\n  'Aquamarine',\n  'Bisque',\n  'BlanchedAlmond',\n  'Blue',\n  'BlueViolet',\n  'Brown',\n  'BurlyWood',\n  'CadetBlue',\n  'Chartreuse',\n  'Chocolate',\n  'Coral',\n  'CornflowerBlue',\n  'Crimson',\n  'Cyan',\n  'DarkBlue',\n  'DarkCyan',\n  'DarkGoldenRod',\n  'DarkGreen',\n  'DarkKhaki',\n  'DarkMagenta',\n  'DarkOliveGreen',\n  'DarkOrange',\n  'DarkOrchid',\n  'DarkRed',\n  'DarkSalmon',\n  'DarkSeaGreen',\n  'DarkSlateBlue',\n  'DarkTurquoise',\n  'DarkViolet',\n  'DeepPink',\n  'DeepSkyBlue',\n  'DodgerBlue',\n  'FireBrick',\n  'ForestGreen',\n  'Fuchsia',\n  'Gainsboro',\n  'Gold',\n  'GoldenRod',\n  'Green',\n\n  'HoneyDew',\n  'HotPink',\n  'IndianRed',\n  'Indigo',\n  'Khaki',\n  'Lavender',\n  'LawnGreen',\n  'LightBlue',\n  'LightCoral',\n  'LightGreen',\n  'LightPink',\n  'LightSalmon',\n  'LightSeaGreen',\n  'LightSkyBlue',\n  'LightSteelBlue',\n  'Lime',\n  'LimeGreen',\n  'Linen',\n  'Magenta',\n  'Maroon',\n  'MediumAquaMarine',\n  'MediumBlue',\n  'MediumOrchid',\n  'MediumPurple',\n  'MediumSeaGreen',\n  'MediumSlateBlue',\n  'MediumSpringGreen',\n  'MediumTurquoise',\n  'MediumVioletRed',\n  'MidnightBlue',\n  'MintCream',\n  'MistyRose',\n  'Moccasin',\n  'Navy',\n  'Olive',\n  'OliveDrab',\n  'Orange',\n  'OrangeRed',\n  'Orchid',\n  'PaleGoldenRod',\n  'PaleGreen',\n  'PaleTurquoise',\n  'PaleVioletRed',\n  'PapayaWhip',\n  'PeachPuff',\n  'Peru',\n  'Pink',\n  'Plum',\n  'PowderBlue',\n  'Purple',\n  'RebeccaPurple',\n  'Red',\n  'RosyBrown',\n  'RoyalBlue',\n  'SaddleBrown',\n  'Salmon',\n  'SandyBrown',\n  'SeaGreen',\n  'Sienna',\n  'Silver',\n  'SkyBlue',\n  'SlateBlue',\n  'SlateGray',\n  'SpringGreen',\n  'SteelBlue',\n  'Tan',\n  'Teal',\n  'Thistle',\n  'Tomato',\n  'Turquoise',\n  'Violet',\n];\nexport const randColor = () =>\n  webColors[Math.floor(Math.random() * webColors.length)];\n","import React, { useContext } from 'react';\nimport {\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n  ListItemIcon,\n  Link,\n} from '@material-ui/core';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport HomeIcon from '@material-ui/icons/Home';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport FaceIcon from '@material-ui/icons/Face';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport CreateIcon from '@material-ui/icons/Create';\nimport InputIcon from '@material-ui/icons/Input';\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\n\ninterface Props {\n  handleLogout: (event: React.KeyboardEvent | React.MouseEvent) => void;\n  toggleDrawer: (\n    open: boolean\n  ) => (event: React.KeyboardEvent | React.MouseEvent) => void;\n}\n\nconst DrawList: React.FC<Props> = (props) => {\n  const { user, isAuthenticated } = useContext(AuthContext);\n  return (\n    <div\n      role='presentation'\n      onClick={props.toggleDrawer(false)}\n      onKeyDown={props.toggleDrawer(false)}>\n      <List>\n        <Typography align='center' variant='h6'>\n          SWAT{' '}\n        </Typography>\n        <Divider />\n        <Link component={RouterLink} to='/' color='textPrimary'>\n          <ListItem button key={'home'}>\n            <ListItemIcon>\n              <HomeIcon />\n            </ListItemIcon>\n            <ListItemText primary={'Home'} />\n          </ListItem>{' '}\n        </Link>{' '}\n        {!isAuthenticated && (\n          <Link component={RouterLink} to='/login' color='textPrimary'>\n            <ListItem button key={'login'}>\n              <ListItemIcon>\n                <VpnKeyIcon />\n              </ListItemIcon>\n              <ListItemText primary={'Login'} />\n            </ListItem>\n          </Link>\n        )}\n        <Link component={RouterLink} to='/testing' color='textPrimary'>\n          <ListItem button key={'testing'}>\n            <ListItemIcon>\n              <InboxIcon />\n            </ListItemIcon>\n            <ListItemText primary={'testing'} />\n          </ListItem>{' '}\n        </Link>{' '}\n        {isAuthenticated && (\n          <Link component={RouterLink} to='/displaytext' color='textPrimary'>\n            <ListItem button key={'dating texts'}>\n              <ListItemIcon>\n                <ListAltIcon />\n              </ListItemIcon>\n              <ListItemText primary={'Dating texts'} />\n            </ListItem>\n          </Link>\n        )}{' '}\n        {isAuthenticated && (\n          <Link component={RouterLink} to='/adddatingtext' color='textPrimary'>\n            <ListItem button key={'add dating text'}>\n              <ListItemIcon>\n                <CreateIcon />\n              </ListItemIcon>\n              <ListItemText primary={'Add Dating text'} />\n            </ListItem>\n          </Link>\n        )}{' '}\n        {isAuthenticated && (\n          <Link component={RouterLink} to='/dashboard' color='textPrimary'>\n            <ListItem button key={`${user?.username} Zone`}>\n              <ListItemIcon>\n                <FaceIcon />\n              </ListItemIcon>\n              <ListItemText primary={`${user?.username} Zone`} />\n            </ListItem>\n          </Link>\n        )}\n        {!isAuthenticated && (\n          <Link component={RouterLink} to='/signup' color='textPrimary'>\n            <ListItem button key={'signup'}>\n              <ListItemIcon>\n                <InputIcon />\n              </ListItemIcon>\n              <ListItemText primary={'SignUp'} />\n            </ListItem>\n          </Link>\n        )}\n      </List>\n      <Divider />\n      {isAuthenticated && (\n        <List>\n          <ListItem button key={'logout'} onClick={props.handleLogout}>\n            <ListItemIcon>\n              <MeetingRoomIcon />\n            </ListItemIcon>\n            <ListItemText primary={'Logout'} />\n          </ListItem>\n        </List>\n      )}\n    </div>\n  );\n};\n\nexport default DrawList;\n","import React, { useState, useContext, useEffect } from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { AuthContext } from '../context/AuthContext';\nimport { LOGOUT_USER as logoutUser } from '../GraphQL/Mutations';\nimport { SEARCH_TEXT as searchText } from '../GraphQL/Queries';\nimport {\n  Link as RouterLink,\n  NavLink,\n  useHistory,\n  useRouteMatch,\n} from 'react-router-dom';\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  InputBase,\n  Drawer,\n  Link,\n  Box,\n  Grid,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport imag from '../img/newHead2.png';\nimport { useStyles } from '../style/useStyles';\nimport DrawList from './DrawList';\n\nexport default function SearchAppBar() {\n  const classes = useStyles();\n  const history = useHistory();\n  const { user, setUser, isAuthenticated, setIsAuthenticated } =\n    useContext(AuthContext);\n  const [drawerState, setDrawerState] = useState<boolean>(false);\n  const [logOutMutation, { error: logOutErr }] = useMutation(logoutUser);\n  const [searchTerm, setSearchTerm] = useState<string | null>(null);\n  const {\n    loading: searchLoading,\n    data: searchData,\n    refetch: searchcgRefetch,\n  } = useQuery(searchText, {\n    variables: {\n      searchTextSearchTerm: searchTerm,\n    },\n  });\n  const handleLogout = async (\n    event: React.KeyboardEvent | React.MouseEvent\n  ) => {\n    event.preventDefault();\n    try {\n      await logOutMutation();\n      window.localStorage.removeItem('token');\n      await setUser(null);\n      await setIsAuthenticated(false);\n    } catch (err) {\n      console.log(`err`, err);\n    }\n  };\n  const toggleDrawer =\n    (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\n      if (\n        event.type === 'keydown' &&\n        ((event as React.KeyboardEvent).key === 'Tab' ||\n          (event as React.KeyboardEvent).key === 'Shift')\n      ) {\n        return;\n      }\n\n      setDrawerState(open);\n    };\n  useEffect(() => {\n    console.log(`object`, searchData);\n  }, [searchData, isAuthenticated]);\n  return (\n    <div className={classes.appbarRoot}>\n      <AppBar\n        position='fixed'\n        style={{\n          backgroundImage: `url(${imag})`,\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          // backgroundRepeat: 'no-repeat',\n        }}>\n        <Toolbar>\n          <Grid\n            container\n            justifyContent='space-between'\n            alignItems='center'\n            alignContent='center'>\n            <Grid item>\n              <IconButton\n                edge='start'\n                className={classes.menuButton}\n                color='inherit'\n                aria-label='open drawer'\n                onClick={toggleDrawer(true)}>\n                <MenuIcon />\n              </IconButton>\n            </Grid>\n            <Drawer\n              anchor='left'\n              open={drawerState}\n              onClose={toggleDrawer(false)}>\n              <DrawList\n                handleLogout={handleLogout}\n                toggleDrawer={toggleDrawer}\n              />\n            </Drawer>\n            <Grid item>\n              <Typography\n                className={classes.Navtitle}\n                variant='h5'\n                onClick={() => {\n                  history.push('/');\n                }}\n                noWrap>\n                SWAT\n              </Typography>\n            </Grid>\n\n            {(history.location.pathname === '/displaytext' ||\n              history.location.pathname.match(/search/)) && (\n              <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                  <IconButton\n                    aria-label='search'\n                    onClick={() => {\n                      console.log(9);\n                    }}>\n                    <SearchIcon />\n                  </IconButton>\n                </div>\n                <InputBase\n                  placeholder='Search…'\n                  classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                  }}\n                  inputProps={{ 'aria-label': 'search' }}\n                  onKeyUp={(event: any) => {\n                    if (event.key === 'Enter') {\n                      setSearchTerm(event.target.value);\n                      history.push(`/search/${event.target.value}`);\n                    }\n                  }}\n                />\n              </div>\n            )}\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.offset} />\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/bground.f1725409.jpeg\";","import React, {\n  FC,\n  Fragment,\n  useState,\n  ChangeEvent,\n  FormEvent,\n  useContext,\n  useRef,\n} from 'react';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../GraphQL/Mutations';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardActions,\n  CardHeader,\n  TextField,\n} from '@material-ui/core';\nimport background from '../img/bground.jpeg';\nimport { AuthContext } from '../context/AuthContext';\nimport Alert from '@material-ui/lab/Alert';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      // display: 'flex',\n      // flexWrap: 'wrap',\n      width: 360,\n      margin: `${theme.spacing(0)} auto`,\n    },\n    loginBtn: {\n      marginTop: theme.spacing(2),\n      // flexGrow: 1,\n    },\n    header: {\n      textAlign: 'center',\n      background: theme.palette.secondary.dark,\n    },\n    card: {\n      marginTop: theme.spacing(10),\n    },\n    button: {\n      justifyContent: 'center',\n    },\n  })\n);\n\ninterface FormData {\n  password: string;\n  email: string;\n}\n\nconst LogIn: React.FC = () => {\n  const emailRegEx: RegExp =\n    /^(([^<>()\\[\\]\\\\.,;:\\s\\W@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const history = useHistory();\n  const [logIn, { error }] = useMutation(LOGIN_USER);\n  const classes = useStyles();\n  const [passwordError, setPasswordError] = useState<string | null>(null);\n  const [emailError, setEmailError] = useState<string | null>(null);\n  const { user, setUser, isAuthenticated, setIsAuthenticated } =\n    useContext(AuthContext);\n  const [input, setInput] = useState<FormData>({\n    password: '',\n    email: '',\n  });\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) =>\n    setInput({ ...input, [e.target.name]: e.target.value });\n\n  const handleCLick = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!input.email || !input.password) {\n      alert('Enter email and password!');\n    } else {\n      console.log(input.email);\n      logIn({\n        variables: {\n          logInEmail: input.email,\n          logInPassword: input.password,\n        },\n      })\n        .then(({ data }) => {\n          localStorage.setItem('token', data.logIn.token);\n          console.log(data);\n          setUser(data.logIn);\n          setIsAuthenticated(true);\n          console.log(data.logIn);\n          history.push('/');\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      if (error) {\n        console.log(error);\n      } else {\n        console.log('user logged in');\n      }\n    }\n  };\n\n  const backgroundStyles = {\n    backgroundImage: `url(${background})`,\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'repeat',\n    width: '100vw',\n    height: '100vh',\n    display: 'flex',\n  };\n  return (\n    <div style={backgroundStyles}>\n      <form\n        className={classes.container}\n        noValidate\n        autoComplete='off'\n        onSubmit={handleCLick}>\n        <Card className={classes.card}>\n          <CardHeader className={classes.header} title='Log in' />\n          <CardContent>\n            <div>\n              {emailError && <Alert severity='error'>{emailError}</Alert>}\n              <TextField\n                fullWidth\n                id='email'\n                type='email'\n                label='Email'\n                placeholder='Email'\n                margin='normal'\n                name='email'\n                onChange={(eve: ChangeEvent<HTMLInputElement>) => {\n                  if (!emailRegEx.test(eve.target.value)) {\n                    setEmailError('Please enter a valid email address.');\n                  } else {\n                    setEmailError(null);\n                    handleChange(eve);\n                  }\n                }}\n              />\n              {passwordError && <Alert severity='error'>{passwordError}</Alert>}\n              <TextField\n                fullWidth\n                id='password'\n                type='password'\n                label='Password'\n                placeholder='Password'\n                margin='normal'\n                name='password'\n                onChange={(eve: ChangeEvent<HTMLInputElement>) => {\n                  if (eve.target.value.length < 8) {\n                    setPasswordError('Enter correct password');\n                  } else {\n                    setPasswordError(null);\n                    handleChange(eve);\n                  }\n                }}\n              />\n            </div>\n          </CardContent>\n          <CardActions className={classes.button}>\n            <Button\n              variant='contained'\n              size='large'\n              type='submit'\n              color='secondary'\n              fullWidth>\n              Login\n            </Button>\n          </CardActions>\n        </Card>\n      </form>\n    </div>\n  );\n};\n\nexport default LogIn;\n","export default __webpack_public_path__ + \"static/media/home.6f12449b.jpg\";","import { Button, Link, Grid, Typography } from '@material-ui/core';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport React from 'react';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport { HashLink } from 'react-router-hash-link';\nimport img from '../img/home.jpg';\nimport { useStyles } from '../style/useStyles';\n\ninterface ArrowProps {\n  to: string;\n}\n\nconst Arrow3: React.FC<ArrowProps> = (props) => {\n  return (\n    <HashLink to={`#${props.to}`}>\n      <Grid\n        container\n        direction='column'\n        justifyContent='center'\n        alignContent='center'\n        alignItems='center'>\n        <KeyboardArrowDownIcon fontSize='small' />\n        <KeyboardArrowDownIcon fontSize='medium' />\n        <KeyboardArrowDownIcon fontSize='large' />\n      </Grid>\n    </HashLink>\n  );\n};\n\nconst NoUserHome: React.FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  return (\n    <Grid\n      container\n      alignContent='center'\n      alignItems='center'\n      justifyContent='center'>\n      {/* <div style={backgroundImg} /> */}\n      <Grid item xs={12}>\n        <img\n          src={img}\n          style={{ width: '100%', height: '100%', paddingTop: '2rem' }}\n          alt='chicken'></img>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid\n          container\n          direction='column'\n          className={classes.heroContent}\n          justifyContent='center'>\n          <Grid container direction='column' xs={12}>\n            <Typography\n              component='h1'\n              variant='h1'\n              align='center'\n              color='textPrimary'>\n              SWAT\n            </Typography>\n            <div className={classes.heroButtons}>\n              <Typography\n                variant='h4'\n                align='center'\n                color='textSecondary'\n                paragraph>\n                analyser\n              </Typography>\n            </div>\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container direction='column'>\n              <Button\n                variant='contained'\n                size='large'\n                color='secondary'\n                onClick={() => history.push('/signup')}>\n                JOIN SWAT\n              </Button>\n            </Grid>\n            <Typography className={classes.textCont} align='center'>\n              Already have an account?{' '}\n              <Link component={RouterLink} to='/login' color='secondary'>\n                Login!\n              </Link>\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        {' '}\n        <Arrow3 to={'desc1'} />\n      </Grid>\n      <Grid item xs={12} className={classes.cardImg} id='desc1'>\n        <Grid\n          container\n          direction='column'\n          className={classes.homeItem}\n          justifyContent='center'\n          alignItems='center'\n          alignContent='space-around'>\n          <Grid item xs={12} className={classes.textCont}>\n            <Typography variant='h6' className={classes.title}>\n              Writing the perfect text for your online dating profile could be\n              difficult\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant='h5'>\n              <Typography variant='h5' color='secondary' component='span'>\n                SWAT\n              </Typography>{' '}\n              is here to help\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>{' '}\n      <Grid item xs={12}>\n        <Arrow3 to={'desc2'} />\n      </Grid>\n      <Grid item xs={12} className={classes.cardImg} id='desc2'>\n        <Grid item xs={9}>\n          <Typography variant='h5' className={classes.textCont}>\n            with\n            <Typography variant='h5' component='span' color='secondary'>\n              &nbsp;SWAT&nbsp;\n            </Typography>{' '}\n            you can receive an AI powered analysis of your dating profile text ,\n            as well as <br /> anonymous feedback from other users.\n          </Typography>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default NoUserHome;\n","import { Grid, Typography, Button, Link } from '@material-ui/core';\nimport React, { useContext } from 'react';\nimport { useStyles } from '../style/useStyles';\nimport {\n  Link as RouterLink,\n  NavLink,\n  useHistory,\n  useRouteMatch,\n} from 'react-router-dom';\nimport img from '../img/home.jpg';\nimport { AuthContext } from '../context/AuthContext';\n\ninterface Props {}\n\nconst UserHome: React.FC = () => {\n  const classes = useStyles();\n  const { user } = useContext(AuthContext);\n  const history = useHistory();\n  return (\n    <Grid\n      container\n      direction='column'\n      className={classes.heroContent}\n      justifyContent='center'>\n      <Grid item xs={12}>\n        <img\n          src={img}\n          style={{ width: '100%', height: '100%', paddingTop: '2rem' }}\n          alt='chicken'></img>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container direction='column' className={classes.textCont}>\n          <Typography variant='h4' align='center'>\n            Welcome to\n          </Typography>\n          <Typography\n            component='h1'\n            variant='h1'\n            align='center'\n            color='secondary'>\n            SWAT\n          </Typography>\n          <div className={classes.heroButtons}>\n            <Typography\n              variant='h4'\n              align='center'\n              color='textSecondary'\n              paragraph>\n              analyser\n            </Typography>\n          </div>\n          <Typography variant='h4' align='center'>\n            {user?.username.toUpperCase()}\n          </Typography>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}></Grid>\n    </Grid>\n  );\n};\n\nexport default UserHome;\n","import React, { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport NoUserHome from '../components/NoUserHome';\nimport UserHome from '../components/UserHome';\n\nconst Home: React.FC = () => {\n  const { user, isAuthenticated } = useContext(AuthContext);\n  return user && isAuthenticated ? <UserHome /> : <NoUserHome />;\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/background.3569529c.jpg\";","import React, { useState, ChangeEvent, FormEvent, useRef } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n  TextField,\n  Card,\n  CardContent,\n  CardHeader,\n  CardActions,\n  Button,\n} from '@material-ui/core';\n\nimport background from '../img/background.jpg';\nimport { useMutation } from '@apollo/client';\nimport { SIGN_UP_USER } from '../GraphQL/Mutations';\nimport Alert from '@material-ui/lab/Alert';\nimport { DatePicker } from '@material-ui/pickers';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: 360,\n      margin: `${theme.spacing(0)} auto`,\n    },\n    loginBtn: {\n      marginTop: theme.spacing(2),\n      flexGrow: 1,\n    },\n    header: {\n      textAlign: 'center',\n      background: theme.palette.secondary.dark,\n    },\n    card: {\n      marginTop: theme.spacing(10),\n    },\n    button: {\n      justifyContent: 'center',\n    },\n  })\n);\n\nconst SignUp: React.FC = () => {\n  const history = useHistory();\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\n    new Date('2014-08-18T21:11:54')\n  );\n  const handleDateChange = (date: Date | null) => {\n    setSelectedDate(date);\n  };\n  const passwordRef = useRef<HTMLInputElement>(null);\n  const emailRegEx: RegExp =\n    /^(([^<>()\\[\\]\\\\.,;:\\s\\W@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const classes = useStyles();\n  const [firstNameErr, setFirstNameErr] = useState<string | null>(null);\n  const [lastNameErr, setLastNameErr] = useState<string | null>(null);\n  const [emailErr, setEmailErr] = useState<string | null>(null);\n  const [passwordErr, setPasswordErr] = useState<string | null>(null);\n  const [passwordConfirmErr, setPasswordConfirmErr] = useState<string | null>(\n    null\n  );\n  const [usernameErr, setUsernameErr] = useState<string | null>(null);\n  const [addUser, { error }] = useMutation(SIGN_UP_USER);\n  const [sign, setSign] = useState<SignUp>({\n    firstName: '',\n    lastName: '',\n    birthday: new Date().toISOString(),\n    email: '',\n    password: '',\n    username: '',\n  });\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) =>\n    setSign({ ...sign, [e.target.name]: e.target.value });\n\n  const handleCLick = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    console.log(sign);\n    if (\n      !sign.firstName ||\n      !sign.lastName ||\n      !sign.email ||\n      !sign.username ||\n      !sign.password\n    ) {\n      alert('Enter your details!');\n    } else {\n      addUser({\n        variables: {\n          addUserUser: {\n            firstName: sign.firstName,\n            lastName: sign.lastName,\n            password: sign.password,\n            birthday: sign.birthday,\n            email: sign.email,\n            username: sign.username,\n          },\n        },\n      }).then(({ data }) => {\n        localStorage.setItem('token', data.addUser.token);\n      });\n      if (error) {\n        console.log(error);\n      } else {\n        console.log('user signed up');\n        history.push('/dashboard');\n      }\n    }\n  };\n  const backgroundStyles = {\n    backgroundImage: `url(${background})`,\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width: '100vw',\n    height: '100vh',\n  };\n  return (\n    <>\n      <div style={backgroundStyles}>\n        <form\n          className={classes.container}\n          noValidate\n          autoComplete='off'\n          onSubmit={handleCLick}>\n          <Card className={classes.card}>\n            <CardHeader className={classes.header} title='Sign Up' />\n            <CardContent>\n              <DatePicker\n                format='dd/MM/yyyy'\n                label='Date of birth'\n                value={selectedDate}\n                onChange={handleDateChange}\n                openTo='year'\n                views={['year', 'month', 'date']}\n                fullWidth\n                color='secondary'\n              />\n              {firstNameErr && <Alert severity='error'>{firstNameErr}</Alert>}\n              <TextField\n                fullWidth\n                id='firstName'\n                type='firstName'\n                label='First Name'\n                placeholder='First Name'\n                margin='normal'\n                name='firstName'\n                onChange={(eve: ChangeEvent<HTMLInputElement>) => {\n                  if (eve.target.value.length < 2) {\n                    setFirstNameErr(\n                      'first name must be at least 2 characters long'\n                    );\n                  } else {\n                    setFirstNameErr(null);\n                    handleChange(eve);\n                  }\n                }}\n              />\n              {lastNameErr && <Alert severity='error'>{lastNameErr}</Alert>}\n              <TextField\n                fullWidth\n                id='lastName'\n                type='lastName'\n                label='Last Name'\n                placeholder='Last Name'\n                margin='normal'\n                name='lastName'\n                onChange={(eve: ChangeEvent<HTMLInputElement>) => {\n                  if (eve.target.value.length < 2) {\n                    setLastNameErr(\n                      'Last name must be at least 2 characters long'\n                    );\n                  } else {\n                    setLastNameErr(null);\n                    handleChange(eve);\n                  }\n                }}\n              />\n              {usernameErr && <Alert severity='error'>{usernameErr}</Alert>}\n              <TextField\n                fullWidth\n                id='username'\n                type='username'\n                label='Username'\n                placeholder='Username'\n                margin='normal'\n                name='username'\n                onChange={(eve: ChangeEvent<HTMLInputElement>) => {\n                  if (eve.target.value.length < 3) {\n                    setUsernameErr(\n                      'Username must be at least 3 characters long'\n                    );\n                  } else {\n                    setUsernameErr(null);\n                    handleChange(eve);\n                  }\n                }}\n              />\n              {emailErr && <Alert severity='error'>{emailErr}</Alert>}\n              <TextField\n                fullWidth\n                id='email'\n                type='email'\n                label='Email'\n                placeholder='Email'\n                margin='normal'\n                name='email'\n                onChange={(eve: ChangeEvent<HTMLInputElement>) => {\n                  if (!emailRegEx.test(eve.target.value)) {\n                    setEmailErr('Please enter a valid email address.');\n                  } else {\n                    setEmailErr(null);\n                    handleChange(eve);\n                  }\n                }}\n              />\n              {passwordErr && <Alert severity='error'>{passwordErr}</Alert>}\n              <TextField\n                fullWidth\n                id='password'\n                type='password'\n                label='Password'\n                placeholder='Password'\n                margin='normal'\n                name='password'\n                inputRef={passwordRef}\n                onChange={(eve: ChangeEvent<HTMLInputElement>) => {\n                  if (eve.target.value.length < 8) {\n                    setPasswordErr(\n                      'Password must be at least 8 characters long.'\n                    );\n                  } else {\n                    setPasswordErr(null);\n                  }\n                }}\n              />\n              {passwordConfirmErr && (\n                <Alert severity='error'>{passwordConfirmErr}</Alert>\n              )}\n              <TextField\n                fullWidth\n                id='passwordConfirm'\n                type='password'\n                label='Confirm Password'\n                placeholder='Password'\n                margin='normal'\n                name='password'\n                onChange={(eve: ChangeEvent<HTMLInputElement>) => {\n                  if (\n                    !passwordRef ||\n                    eve.target.value !== passwordRef?.current?.value.toString()\n                  ) {\n                    setPasswordConfirmErr('Passwords do not match');\n                  } else {\n                    setPasswordConfirmErr(null);\n                    handleChange(eve);\n                  }\n                }}\n              />\n            </CardContent>\n            <CardActions className={classes.button}>\n              <Button\n                variant='contained'\n                size='large'\n                type='submit'\n                color='secondary'\n                fullWidth>\n                Sign Up\n              </Button>\n            </CardActions>\n          </Card>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default SignUp;\n","export default __webpack_public_path__ + \"static/media/head.b1a0da6e.jpeg\";","import React, { useContext, useEffect, useState } from 'react';\nimport {\n  Button,\n  Typography,\n  TextField,\n  Box,\n  Grid,\n  Card,\n  CardHeader,\n  Avatar,\n  CardContent,\n  CardActions,\n  IconButton,\n  Collapse,\n} from '@material-ui/core';\nimport { useStyles, webColors } from '../style/useStyles';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport comment from 'material-ui/svg-icons/communication/comment';\ninterface Props {\n  comments: [Comment];\n}\nconst CommentBox: React.FC<Props> = (props) => {\n  const { comments } = props;\n  const classes = useStyles();\n  useEffect(() => {\n    console.log('comment props', comments.length);\n  }, []);\n\n  return (\n    <Grid container spacing={2}>\n      {comments.map((comment: Comment) => {\n        const randomColor =\n          webColors[Math.floor(Math.random() * webColors.length)];\n        return (\n          <Grid\n            item\n            key={`${comment.owner._id},${comment.onText},${comment.postDate}`}\n            xs={12}>\n            <Card className={classes.commentCardRoot}>\n              <CardHeader\n                avatar={\n                  <Avatar\n                    aria-label='avatar'\n                    style={{ backgroundColor: randomColor }}>\n                    {comment.owner?.username[0].toUpperCase()}\n                  </Avatar>\n                }\n                // action={\n                //   <IconButton aria-label='settings'>\n                //     <MoreVertIcon />\n                //   </IconButton>\n                // }\n                // title='Shrimp and Chorizo Paella'\n                subheader={`${new Date(comment.postDate).toDateString()}`}\n              />\n              <CardContent>\n                <Grid container>\n                  <Grid item>\n                    {' '}\n                    <Typography color='textSecondary'>\n                      {comment.text}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default CommentBox;\n","import React, {\n  useState,\n  ChangeEvent,\n  FormEvent,\n  useEffect,\n  useRef,\n} from 'react';\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport { ADD_COMMENT } from '../GraphQL/Mutations';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Button,\n  Typography,\n  TextField,\n  TextareaAutosize,\n  Box,\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  CardMedia,\n  Avatar,\n  CardActions,\n  IconButton,\n  Collapse,\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport StarRateIcon from '@material-ui/icons/StarRate';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ShareIcon from '@material-ui/icons/Share';\nimport { ObjectId } from 'mongodb';\nimport { DATING_TEXT } from '../GraphQL/Queries';\nimport CommentBox from './CommentBox';\nimport { useStyles, randColor } from '../style/useStyles';\nimport AddCommentTwoToneIcon from '@material-ui/icons/AddCommentTwoTone';\nimport comment from 'material-ui/svg-icons/communication/comment';\n\ninterface IAddComment {\n  text: string;\n  onText: ObjectId | null;\n}\n\nconst DisplayTextComp: React.FC<DTProps> = (props) => {\n  const { allText: aText } = props;\n  const classes = useStyles();\n  const [expandedComment, setExpandedComment] = React.useState(false);\n  const commentRef = useRef<HTMLTextAreaElement | null>();\n  const [expandedAddComment, setExpandedAddComment] = React.useState(false);\n  const { error, loading, data: datingTextData } = useQuery(DATING_TEXT);\n  const [addComment] = useMutation(ADD_COMMENT, {\n    refetchQueries: [{ query: DATING_TEXT }],\n  });\n  const [comment, setComment] = useState<IAddComment>({\n    text: '',\n    onText: null,\n  });\n\n  const handleChange = (e: ChangeEvent<any>) =>\n    setComment({ ...comment, [e.target.name]: e.target.value });\n\n  const handleExpandClick = (num: number) => {\n    if (num === 2) {\n      setExpandedComment(!expandedComment);\n    } else if (num === 1) {\n      setExpandedAddComment(!expandedAddComment);\n    }\n  };\n\n  const handleCommentSubmit = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    e.preventDefault();\n    addComment({\n      variables: {\n        addCommentComment: {\n          text: commentRef.current?.value,\n          onText: aText._id,\n        },\n      },\n    });\n    if (error) {\n      console.log(error);\n    } else {\n      console.log('success');\n      setComment({ text: '', onText: null });\n      setExpandedAddComment(!expandedAddComment);\n      setExpandedComment(true);\n    }\n  };\n  // let randomColor: string = 'black';\n  let randomColor = randColor();\n  useEffect(() => {\n    // console.log(comment);\n    // console.log('props', props);\n\n    // randomColor = 'white';\n    console.log(`randomColor`, randomColor);\n    console.log(`inputRef.current`, commentRef.current);\n  }, [comment]);\n\n  return (\n    <Card>\n      <CardHeader\n        avatar={\n          <Avatar aria-label='avatar' style={{ backgroundColor: randomColor }}>\n            {aText.owner?.username[0].toUpperCase()}\n          </Avatar>\n        }\n        // action={\n        // <IconButton aria-label='settings'>\n        /* <MoreVertIcon /> */\n        /* </IconButton> */\n        // }\n        // title='Shrimp and Chorizo Paella'\n        subheader={`${new Date(aText.postDate).toDateString()}`}\n      />\n      <CardContent>\n        <Typography variant='body2' color='textSecondary' component='p'>\n          {aText.text}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton\n          // aria-label='comment'\n          // className={clsx(classes.cardExpand, {\n          //   [classes.cardExpandOpen]: expandedComment,\n          // })}\n          onClick={() => handleExpandClick(1)}\n          aria-expanded={expandedAddComment}\n          aria-label='add comment'>\n          <AddCommentTwoToneIcon />\n        </IconButton>\n        {aText.comments.length > 0 && (\n          <IconButton\n            className={clsx(classes.cardExpand, {\n              [classes.cardExpandOpen]: expandedComment,\n            })}\n            onClick={() => handleExpandClick(2)}\n            aria-expanded={expandedComment}\n            aria-label='show more'>\n            <ExpandMoreIcon />\n          </IconButton>\n        )}\n      </CardActions>{' '}\n      <Collapse in={expandedAddComment} timeout='auto' unmountOnExit>\n        <CardContent>\n          <Grid\n            container\n            direction='column'\n            justifyContent='center'\n            spacing={1}>\n            <Grid item xs={12}>\n              <TextareaAutosize\n                placeholder='Comment'\n                // fullWidth\n                style={{ width: '100%' }}\n                id={`${aText._id}-post-comment`}\n                rows={3}\n                name='text'\n                ref={(tag) => (commentRef.current = tag)}\n              />{' '}\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                size='medium'\n                fullWidth\n                variant='contained'\n                color='primary'\n                // style={{ backgroundColor: '#FFD700', color: '#FFFFFF' }}\n                type='button'\n                onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) =>\n                  handleCommentSubmit(e)\n                }>\n                comment\n              </Button>{' '}\n            </Grid>{' '}\n          </Grid>\n        </CardContent>\n      </Collapse>\n      <Collapse in={expandedComment} timeout='auto' unmountOnExit>\n        <CardContent>\n          <CommentBox comments={aText.comments} />\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n};\nexport default DisplayTextComp;\n","import React from 'react';\nimport bg from '../img/head.jpeg';\nimport backGround from '../img/head.jpeg';\nimport DisplayTextComp from '../components/DisplayTextComp';\nimport { Typography, Box, Grid } from '@material-ui/core';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport { useQuery, gql } from '@apollo/client';\nimport { DATING_TEXT } from '../GraphQL/Queries';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    title: {\n      flexGrow: 1,\n      backgroundImage: `url(${backGround})`,\n      backgroundPosition: 'center',\n      width: '100vw',\n      height: '150px',\n      paddingTop: 70,\n    },\n    footer: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(6),\n    },\n  })\n);\n\nconst DisplayText: React.FC = () => {\n  const { error, loading, data } = useQuery(DATING_TEXT);\n  const classes = useStyles();\n\n  const backgroundStyles = {\n    backgroundImage: `url(${bg})`,\n    // marginLeft: 0,\n    // marginRight: 0,\n    // width: '100%',\n    // resizeMode: 'repeat',\n  };\n  return (\n    <div>\n      <Grid\n        container\n        direction='column'\n        alignContent='center'\n        style={backgroundStyles}\n        spacing={2}>\n        {loading && <p>loading</p>}\n        {error !== undefined && <p>{error.message}</p>}\n        {data !== undefined &&\n          data.allTexts.map((allText: DatingText, index: number) => {\n            return (\n              <Grid item xs={11}>\n                <DisplayTextComp key={index} allText={allText} />\n              </Grid>\n            );\n          })}\n      </Grid>\n    </div>\n  );\n};\nexport default DisplayText;\n","import { useMutation, useQuery } from '@apollo/client';\nimport { flexbox } from '@material-ui/system';\nimport { useHistory } from 'react-router-dom';\n\nimport {\n  Button,\n  Checkbox,\n  FormControlLabel,\n  TextareaAutosize,\n  Typography,\n  Grid,\n  Input,\n  CircularProgress,\n} from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport React, {\n  ChangeEvent,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { ADD_DATING } from '../GraphQL/Mutations';\nimport { TONE_OF_TEXT } from '../GraphQL/Queries';\nimport { AmberSwitch, StyledRating } from '../style/useStyles';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nconst AddText: React.FC = (props) => {\n  const { user } = useContext(AuthContext);\n  const history = useHistory();\n  const [AddDatingTextMutation, { error: addTextErr }] =\n    useMutation(ADD_DATING);\n  const [datingText, setDatingText] = useState<IAddText>({\n    // owner: user?._id,\n    text: '',\n    postDate: new Date().toISOString(),\n    xprivate: false,\n    display: true,\n  });\n  const [submit, setSubmit] = useState<boolean>(false);\n  const textRef = useRef<HTMLInputElement>(null);\n  const [textAnal, setTextAnal] = React.useState<string>('');\n  const {\n    loading: toneLoading,\n    data: toneData,\n    refetch: toneRefetch,\n  } = useQuery(TONE_OF_TEXT, {\n    variables: {\n      aToneText: textAnal,\n    },\n  });\n  const handleChange = (e: ChangeEvent<any>): void =>\n    setDatingText({ ...datingText, [e.target.name]: e.target.value });\n\n  const handleSubmit = async () => {\n    try {\n      await AddDatingTextMutation({\n        variables: {\n          addDatingTextText: {\n            // owner: datingText.owner,\n            text: datingText.text,\n            postDate: datingText.postDate,\n            xprivate: datingText.xprivate,\n            display: datingText.display,\n            toneResults: toneData.aTone,\n          },\n        },\n      });\n      console.log('text was uploaded');\n      history.push('/displaytext');\n    } catch (err) {\n      if (addTextErr) {\n        console.log(addTextErr);\n      }\n      console.log(`err`, err);\n    }\n    setSubmit(false);\n  };\n\n  useEffect(() => {\n    console.log(`toneData from Ue`, toneData);\n    const thv = async () => {\n      await toneData;\n      console.log(`submit`, submit);\n      submit && handleSubmit();\n      console.log('submit', submit);\n    };\n    thv();\n  }, [toneData, submit]);\n  return (\n    <Grid\n      container\n      id='hello0000'\n      spacing={1}\n      alignContent='center'\n      justifyContent='center'>\n      <Grid item xs={12}>\n        <TextareaAutosize\n          aria-label='minimum height'\n          minRows={10}\n          placeholder='Add your own dating text here and click upload'\n          name='text'\n          value={datingText.text}\n          onChange={handleChange}\n          style={{\n            width: '100%',\n          }}\n        />\n      </Grid>\n\n      <Grid item xs={12} style={{ display: 'flex' }}>\n        <FormControlLabel\n          style={{\n            background: 'rgba(255,255,255,0.7)',\n            borderRadius: '50%',\n          }}\n          control={\n            <AmberSwitch\n              checked={datingText.xprivate}\n              onChange={(event) => {\n                setDatingText({\n                  ...datingText,\n                  xprivate: event.target.checked,\n                });\n              }}\n              name='xprivate'\n            />\n          }\n          label={datingText.xprivate ? 'Private' : 'Public'}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          fullWidth\n          variant='contained'\n          color='secondary'\n          type='button'\n          name='update_button2'\n          onClick={async (e) => {\n            setTextAnal(datingText.text);\n          }}>\n          Let's analyze your text\n        </Button>\n      </Grid>\n      {textAnal !== '' &&\n        (toneData?.aTone && Object.keys(toneData.aTone).length !== 0 ? (\n          <Grid\n            container\n            direction='row'\n            style={{\n              background: 'rgba(255,255,255,0.7)',\n              // borderRadius: \"50%\",\n            }}\n            alignContent='center'\n            justifyContent='center'\n            // spacing={8}\n          >\n            {Object.keys(toneData.aTone).map((tone) => {\n              console.log(`toneData.aTone[tone]`, toneData.aTone[tone]);\n              const toneNum = Math.round(toneData.aTone[tone] * 100) / 10 / 2;\n              return (\n                <>\n                  <Grid item xs={3}>\n                    <Typography>{tone}</Typography>\n                  </Grid>\n                  <Grid item xs={5}>\n                    <StyledRating\n                      name='customized-color'\n                      defaultValue={toneNum}\n                      getLabelText={(value: number) =>\n                        `${value} Heart${value !== 1 ? 's' : ''}`\n                      }\n                      precision={0.1}\n                      max={5}\n                      readOnly={true}\n                      icon={<FavoriteIcon fontSize='inherit' />}\n                    />\n                  </Grid>\n                  <Grid item xs={2}>\n                    <Typography>{toneNum}/5</Typography>\n                  </Grid>\n                </>\n              );\n            })}\n          </Grid>\n        ) : !toneLoading ? (\n          <Typography>text to short</Typography>\n        ) : (\n          <Grid item xs={12}>\n            <Grid container alignContent='center' justifyContent='center'>\n              <Grid item>\n                {' '}\n                <CircularProgress />\n              </Grid>\n            </Grid>\n          </Grid>\n        ))}\n      <Grid item xs={12}>\n        <Button\n          variant='contained'\n          fullWidth\n          color='secondary'\n          type='button'\n          name='update_button'\n          onClick={async (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            await setTextAnal(datingText.text);\n            await setSubmit(true);\n          }}>\n          Save your text\n        </Button>{' '}\n      </Grid>\n    </Grid>\n  );\n};\nexport default AddText;\n","import React from \"react\";\nimport bg from \"../img/backImg.png\";\nimport AddText from \"../components/AddText\";\nimport { Typography, Grid, CircularProgress } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport backGround from \"../img/head.jpeg\";\nimport { AutoComplete } from \"material-ui\";\nimport { CenterFocusStrong } from \"@material-ui/icons\";\ninterface Props {}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    title: {\n      flexGrow: 10,\n      backgroundImage: `url(${backGround})`,\n      backgroundPosition: \"center\",\n      width: \"100vw\",\n      height: \"150px\",\n      paddingTop: 70,\n    },\n    footer: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(6),\n    },\n  })\n);\n\nconst AddDatingText: React.FC = () => {\n  const backgroundStyles = {\n    flexGrow: 1,\n    backgroundImage: `url(${backGround})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    // backgroundRepeat: \"repeat\",\n    width: \"100vw\",\n    height: \"100vh\",\n    alignContent: \"baseline\",\n  };\n  const classes = useStyles();\n  return (\n    <Grid\n      container\n      style={backgroundStyles}\n      alignItems=\"flex-start\"\n      justifyContent=\"center\"\n      // spacing={9}\n    >\n      <Grid item xs={12}>\n        <Typography\n          // className={classes.title}\n          component=\"h5\"\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom\n        >\n          Add Dating Texts ✏️\n        </Typography>{\" \"}\n      </Grid>\n      <Grid item xs={10}>\n        <AddText />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default AddDatingText;\n","// import React from 'react'\n\n// interface Props {\n\n// }\n\n// const PrivateRoute = (props: Props) => {\n//     return (\n//         <div>\n\n//         </div>\n//     )\n// }\n\n// export default PrivateRoute\n\nimport React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nconst PrivateRoute: React.FC<{\n  component: React.FC;\n  path: string;\n  exact: boolean;\n}> = (props) => {\n  const { user, isAuthenticated } = useContext(AuthContext);\n  const token = window.localStorage.getItem(\"token\");\n  const condition = token ? true : false;\n\n  return condition ? (\n    <Route path={props.path} exact={props.exact} component={props.component} />\n  ) : (\n    <Redirect to=\"/signup\" />\n  );\n};\nexport default PrivateRoute;\n","import React, {\n  useContext,\n  useEffect,\n  useState,\n  ChangeEvent,\n  FormEvent,\n  useRef,\n} from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport {\n  TextField,\n  Card,\n  CardContent,\n  CardActions,\n  CardHeader,\n  Button,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { useMutation } from \"@apollo/client\";\nimport { useStyles } from \"../style/useStyles\";\nimport { UPDATE_USER } from \"../GraphQL/Mutations\";\n\nconst UpdateProfile: React.FC = (props) => {\n  const classes = useStyles();\n\n  const { user, setUser } = useContext(AuthContext);\n\n  const [updateUserProfileUser, { error }] = useMutation(UPDATE_USER);\n\n  const passwordRef = useRef<HTMLInputElement>(null);\n\n  const [firstNameErr, setFirstNameErr] = useState<string | null>(null);\n  const [lastNameErr, setLastNameErr] = useState<string | null>(null);\n  const [emailErr, setEmailErr] = useState<string | null>(null);\n  const [passwordErr, setPasswordErr] = useState<string | null>(null);\n  const [passwordConfirmErr, setPasswordConfirmErr] = useState<string | null>(\n    null\n  );\n  const [usernameErr, setUsernameErr] = useState<string | null>(null);\n  const [successMsg, setSuccessMsg] = useState<string | null>(null);\n  const [loading, setLoading] = useState<boolean>(\n    !firstNameErr &&\n      !lastNameErr &&\n      !emailErr &&\n      !passwordErr &&\n      !passwordConfirmErr &&\n      !usernameErr\n      ? false\n      : true\n  );\n  const [update, setUpdate] = useState<userNs.updateProfile | null>(null);\n\n  const emailRegEx: RegExp =\n    /^(([^<>()\\[\\]\\\\.,;:\\s\\W@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    update && setUpdate({ ...update, [e.target.name]: e.target.value });\n  };\n\n  const handleUpdate = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setLoading(true);\n    setUsernameErr(null);\n    try {\n      const updatedUser = await updateUserProfileUser({\n        variables: {\n          updateUserProfileUser: update,\n        },\n      });\n      setUser(updatedUser.data.updateUserProfile);\n      setSuccessMsg(\"Profile updated successfully!\");\n    } catch (err) {\n      console.log(err);\n      if (err.message.indexOf(\"username\")) {\n        setUsernameErr(err.message);\n      }\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    user &&\n      setUpdate({\n        firstName: user.firstName,\n        lastName: user.lastName,\n        password: user.password,\n        email: user.email,\n        username: user.username,\n        // avatar: user.avatar,\n      });\n  }, [user]);\n\n  return (\n    <>\n      {user !== null && (\n        <form\n          className={classes.container}\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={handleUpdate}\n        >\n          <Card className={classes.card}>\n            <CardContent>\n              <div>\n                {successMsg && <Alert severity=\"success\">{successMsg}</Alert>}\n                {firstNameErr && <Alert severity=\"error\">{firstNameErr}</Alert>}\n                <TextField\n                  fullWidth\n                  id=\"firstName\"\n                  type=\"firstName\"\n                  label=\"First Name\"\n                  placeholder={`${user?.firstName}`}\n                  defaultValue={`${user?.firstName}`}\n                  margin=\"normal\"\n                  name=\"firstName\"\n                  onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                    if (event.target.value.length < 2) {\n                      setFirstNameErr(\n                        \"first name must be at least 2 characters long\"\n                      );\n                    } else {\n                      setFirstNameErr(null);\n                      handleChange(event);\n                    }\n                  }}\n                />\n                {lastNameErr && <Alert severity=\"error\">{lastNameErr}</Alert>}\n                <TextField\n                  fullWidth\n                  id=\"lastName\"\n                  type=\"lastName\"\n                  label=\"Last Name\"\n                  placeholder={`${user?.lastName}`}\n                  defaultValue={`${user?.lastName}`}\n                  margin=\"normal\"\n                  name=\"lastName\"\n                  onChange={(eve: ChangeEvent<HTMLInputElement>) => {\n                    if (eve.target.value.length < 2) {\n                      setLastNameErr(\n                        \"Last name must be at least 2 characters long\"\n                      );\n                    } else {\n                      setLastNameErr(null);\n                      handleChange(eve);\n                    }\n                  }}\n                />\n                {usernameErr && <Alert severity=\"error\">{usernameErr}</Alert>}\n                <TextField\n                  fullWidth\n                  id=\"username\"\n                  type=\"username\"\n                  label=\"Username\"\n                  placeholder={`${user?.username}`}\n                  defaultValue={`${user?.username}`}\n                  margin=\"normal\"\n                  name=\"username\"\n                  onChange={(eve: ChangeEvent<HTMLInputElement>) => {\n                    if (eve.target.value.length < 3) {\n                      setUsernameErr(\n                        \"Username must be at least 3 characters long\"\n                      );\n                    } else {\n                      setUsernameErr(null);\n                      handleChange(eve);\n                    }\n                  }}\n                />\n                {emailErr && <Alert severity=\"error\">{emailErr}</Alert>}\n                <TextField\n                  fullWidth\n                  id=\"email\"\n                  type=\"email\"\n                  label=\"Email\"\n                  defaultValue={user?.email}\n                  margin=\"normal\"\n                  name=\"email\"\n                  onChange={(eve: ChangeEvent<HTMLInputElement>) => {\n                    if (!emailRegEx.test(eve.target.value)) {\n                      setEmailErr(\"Please enter a valid email address.\");\n                    } else {\n                      setEmailErr(null);\n                      handleChange(eve);\n                    }\n                  }}\n                />\n                {passwordErr && <Alert severity=\"error\">{passwordErr}</Alert>}\n                <TextField\n                  fullWidth\n                  id=\"password\"\n                  type=\"password\"\n                  label=\"Password\"\n                  placeholder=\"Password\"\n                  margin=\"normal\"\n                  name=\"passwordConfirm\"\n                  inputRef={passwordRef}\n                  onChange={(eve: ChangeEvent<HTMLInputElement>) => {\n                    if (eve.target.value.length < 8) {\n                      setPasswordErr(\n                        \"Password must be at least 8 characters long.\"\n                      );\n                    } else {\n                      setPasswordErr(null);\n                    }\n                  }}\n                />\n                {passwordConfirmErr && (\n                  <Alert severity=\"error\">{passwordConfirmErr}</Alert>\n                )}\n                <TextField\n                  fullWidth\n                  id=\"passwordConfirm\"\n                  type=\"password\"\n                  label=\"Confirm Password\"\n                  placeholder=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onChange={(eve: ChangeEvent<HTMLInputElement>) => {\n                    console.log(`object`, passwordRef.current?.value);\n                    if (\n                      !passwordRef ||\n                      eve.target.value !==\n                        passwordRef?.current?.value.toString()\n                    ) {\n                      setPasswordConfirmErr(\"Passwords do not match\");\n                    } else {\n                      setPasswordConfirmErr(null);\n                    }\n                  }}\n                />\n              </div>\n            </CardContent>\n            <CardActions>\n              <Grid container justifyContent=\"center\">\n                <Button\n                  variant=\"contained\"\n                  size=\"large\"\n                  type=\"submit\"\n                  color=\"primary\"\n                  disabled={loading}\n                >\n                  <Typography color=\"inherit\">Update</Typography>\n                </Button>\n              </Grid>\n            </CardActions>\n          </Card>\n        </form>\n      )}\n    </>\n  );\n};\n\nexport default UpdateProfile;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { Typography, AppBar, Tab, Tabs, Box, Grid } from '@material-ui/core';\n// import { backgroundStyles } from \"../style/useStyles\";\nimport {\n  createStyles,\n  alpha,\n  Theme,\n  makeStyles,\n} from '@material-ui/core/styles';\nimport '@fontsource/special-elite'; // Defaults to weight 400.\n\nimport UpdateProfile from '../components/UpdateProfile';\nimport backGround from '../img/backImg.png';\nimport head from '../img/head.jpeg';\nimport DisplayTextComp from '../components/DisplayTextComp';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      // flexGrow: 1,\n      // backgroundImage: `url(${backGround})`,\n      // backgroundPosition: \"center\",\n      // backgroundSize: \"cover\",\n      // backgroundRepeat: \"no-repeat\",\n      // width: \"100vw\",\n      // height: \"100vh\",\n    },\n    title: {\n      // flexGrow: 1,\n      // margin: 20,\n      background: 'rgba(255,255,255,0.75)',\n      fontFamily: 'Special Elite',\n      width: '100vw',\n      // height: \"150px\",\n      paddingTop: '1rem',\n    },\n    footer: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(6),\n    },\n    rootSnd: {\n      display: 'flex',\n      flexDirection: 'row',\n      minWidth: 275,\n      margin: theme.spacing(1),\n    },\n    details: {\n      display: 'flex',\n    },\n    content: {\n      flex: '1 0 auto',\n    },\n    controls: {\n      display: 'flex',\n      alignItems: 'center',\n      paddingLeft: theme.spacing(1),\n      paddingBottom: theme.spacing(1),\n    },\n    dashCont: {\n      backgroundImage: `url(${head})`,\n      // backgroundPosition: \"center\",\n      // backgroundRepeat: \"no-repeat\",\n      backgroundSize: 'auto',\n    },\n  })\n);\nconst Dashboard = () => {\n  const classes = useStyles();\n  const { user, setUser } = useContext(AuthContext);\n  const [tabValue, setTabValue] = useState<number>(0);\n  console.log(user);\n\n  const handleTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setTabValue(newValue);\n  };\n  useEffect(() => {\n    console.log(`user`, user);\n  }, [user]);\n  return (\n    user && (\n      <Grid\n        container\n        id='fjkdhskj'\n        justifyContent='center'\n        className={classes.dashCont}>\n        <Grid item xs={12}>\n          <Typography\n            className={classes.title}\n            component='h4'\n            variant='h4'\n            align='center'\n            color='secondary'\n            gutterBottom>\n            👤 The &nbsp;\n            {user.username[0].toUpperCase() + user.username.slice(1)}\n            &nbsp; Zone 👥\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Tabs\n            className={classes.title}\n            value={tabValue}\n            onChange={handleTabChange}\n            indicatorColor='secondary'\n            textColor='secondary'\n            centered\n            variant='fullWidth'>\n            <Tab\n              label='your texts'\n              id='userTextTab'\n              aria-controls={`your-texts-tabpanel`}\n            />{' '}\n            <Tab\n              label='mange profile'\n              id='manageProfileTab'\n              aria-controls='manage profile tab'\n            />\n          </Tabs>\n        </Grid>\n        <div\n          role='tabpanel'\n          hidden={tabValue !== 0}\n          id={`your-texts-tabpanel`}\n          aria-labelledby={`your-texts-tab`}>\n          {tabValue === 0 &&\n            (user?.datingTexts?.length ? (\n              <Grid container justifyContent='center'>\n                <Grid item xs={12}>\n                  <Grid\n                    container\n                    justifyContent='center'\n                    alignItems='center'\n                    alignContent='center'>\n                    {user?.datingTexts.map((datingText: DatingText) => {\n                      console.log(`datingText`, datingText);\n                      return (\n                        <Grid item xs={12}>\n                          <DisplayTextComp\n                            key={`${datingText._id}-dashboard`}\n                            allText={datingText}\n                          />\n                        </Grid>\n                      );\n                    })}\n                  </Grid>\n                </Grid>\n              </Grid>\n            ) : (\n              <p>no text</p>\n            ))}\n        </div>\n        <div\n          role='tabpanel'\n          hidden={tabValue !== 1}\n          id={`manage-your-profile-tabpanel`}\n          aria-labelledby={`manage-profile-tab`}>\n          <Grid container justifyContent='center'>\n            {' '}\n            {tabValue === 1 && <UpdateProfile />}\n          </Grid>\n        </div>\n      </Grid>\n    )\n  );\n};\n\nexport default Dashboard;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery, gql } from '@apollo/client';\nimport { SEARCH_TEXT } from '../GraphQL/Queries';\nimport { Typography, Box } from '@material-ui/core';\nimport DisplayTextComp from '../components/DisplayTextComp';\nimport bg from '../img/head.jpeg';\n\ntype srchParams = {\n  searchTerm: string;\n};\ninterface Props {}\n\nconst SrchRes = (props: Props) => {\n  const { searchTerm: orginalTerm } = useParams<srchParams>();\n  const [searchTerm, setSearchTerm] = useState<string>(orginalTerm);\n  const {\n    error: srchErr,\n    loading: srchLoading,\n    data: srchData,\n  } = useQuery(SEARCH_TEXT, {\n    variables: {\n      searchTextSearchTerm: orginalTerm,\n    },\n  });\n  const backgroundStyles = {\n    backgroundImage: `url(${bg})`,\n    // backgroundPosition: \"center\",\n    // backgroundSize: \"cover\",\n    // backgroundRepeat: \"repeat\",\n    width: '100%',\n    // height: \"10%\",\n    resizeMode: 'repeat',\n  };\n\n  useEffect(() => {\n    console.log(`srchData`, srchData);\n  }, [srchData]);\n  console.log(`useParams`, searchTerm);\n  return (\n    <div style={backgroundStyles}>\n      {srchLoading && <p>loading</p>}\n      {srchErr !== undefined && <p>{srchErr.message}</p>}\n      {srchData !== undefined &&\n        srchData.searchText.map((text: any, index: number) => {\n          // console.log(`allText222`, allText);\n          return <DisplayTextComp key={index} allText={text} />;\n        })}\n    </div>\n  );\n};\n\nexport default SrchRes;\n","import {\n  createTheme,\n  makeStyles,\n  createStyles,\n  Theme as AugmentedTheme,\n  ThemeProvider,\n} from '@material-ui/core/styles';\nimport '@fontsource/special-elite'; // Defaults to weight 400.\n\nimport bg from '../img/backImg.png';\nexport const theme = createTheme({\n  palette: {\n    primary: {\n      light: '#DBBC57',\n      main: '#d4af37',\n      dark: '#B99727',\n    },\n    secondary: {\n      light: '#DBBC57',\n      main: '#d4af37',\n      dark: '#B99727',\n    },\n    text: {\n      //   secondary: \"#ffffff\",\n    },\n    background: {\n      paper: 'rgba(255, 244, 128, 0.9)',\n    },\n  },\n  typography: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    h1: {\n      fontFamily:\n        '\"Special Elite\",\"Monospace\",\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    },\n    h2: {\n      fontFamily: '\"Monospace\",\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    },\n    h3: {\n      fontFamily: '\"Monospace\",\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    },\n    h4: {\n      fontFamily:\n        '\"Special Elite\",\"Monospace\",\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    },\n    h5: {\n      fontFamily:\n        '\"Special Elite\",\"Monospace\",\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    },\n    h6: {\n      // fontSize: 70,\n      // letterSpacing: 14,\n      fontStyle: 'oblique',\n      fontFamily:\n        '\"Special Elite\",\"Monospace\",\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    },\n  },\n  // overrides: {\n  //   MuiCssBaseline: {\n  //     \"@global\": {\n  //       body: {\n  //         backgroundImage: `url(${bg})`,\n  //         height: \"100vh\",\n  //       },\n  //     },\n  //   },\n  // },\n});\nexport const webColors = [\n  'AliceBlue',\n  'AntiqueWhite',\n  'Aqua',\n  'Aquamarine',\n  'Azure',\n  'Beige',\n  'Bisque',\n  'BlanchedAlmond',\n  'Blue',\n  'BlueViolet',\n  'Brown',\n  'BurlyWood',\n  'CadetBlue',\n  'Chartreuse',\n  'Chocolate',\n  'Coral',\n  'CornflowerBlue',\n  'Cornsilk',\n  'Crimson',\n  'Cyan',\n  'DarkBlue',\n  'DarkCyan',\n  'DarkGoldenRod',\n  'DarkGray',\n  'DarkGreen',\n  'DarkKhaki',\n  'DarkMagenta',\n  'DarkOliveGreen',\n  'DarkOrange',\n  'DarkOrchid',\n  'DarkRed',\n  'DarkSalmon',\n  'DarkSeaGreen',\n  'DarkSlateBlue',\n  'DarkSlateGray',\n  'DarkTurquoise',\n  'DarkViolet',\n  'DeepPink',\n  'DeepSkyBlue',\n  'DimGray',\n  'DodgerBlue',\n  'FireBrick',\n  'FloralWhite',\n  'ForestGreen',\n  'Fuchsia',\n  'Gainsboro',\n  'GhostWhite',\n  'Gold',\n  'GoldenRod',\n  'Gray',\n  'Green',\n  'GreenYellow',\n  'HoneyDew',\n  'HotPink',\n  'IndianRed',\n  'Indigo',\n  'Ivory',\n  'Khaki',\n  'Lavender',\n  'LavenderBlush',\n  'LawnGreen',\n  'LemonChiffon',\n  'LightBlue',\n  'LightCoral',\n  'LightCyan',\n  'LightGoldenRodYellow',\n  'LightGray',\n  'LightGreen',\n  'LightPink',\n  'LightSalmon',\n  'LightSeaGreen',\n  'LightSkyBlue',\n  'LightSlateGray',\n  'LightSteelBlue',\n  'LightYellow',\n  'Lime',\n  'LimeGreen',\n  'Linen',\n  'Magenta',\n  'Maroon',\n  'MediumAquaMarine',\n  'MediumBlue',\n  'MediumOrchid',\n  'MediumPurple',\n  'MediumSeaGreen',\n  'MediumSlateBlue',\n  'MediumSpringGreen',\n  'MediumTurquoise',\n  'MediumVioletRed',\n  'MidnightBlue',\n  'MintCream',\n  'MistyRose',\n  'Moccasin',\n  'NavajoWhite',\n  'Navy',\n  'OldLace',\n  'Olive',\n  'OliveDrab',\n  'Orange',\n  'OrangeRed',\n  'Orchid',\n  'PaleGoldenRod',\n  'PaleGreen',\n  'PaleTurquoise',\n  'PaleVioletRed',\n  'PapayaWhip',\n  'PeachPuff',\n  'Peru',\n  'Pink',\n  'Plum',\n  'PowderBlue',\n  'Purple',\n  'RebeccaPurple',\n  'Red',\n  'RosyBrown',\n  'RoyalBlue',\n  'SaddleBrown',\n  'Salmon',\n  'SandyBrown',\n  'SeaGreen',\n  'SeaShell',\n  'Sienna',\n  'Silver',\n  'SkyBlue',\n  'SlateBlue',\n  'SlateGray',\n  'Snow',\n  'SpringGreen',\n  'SteelBlue',\n  'Tan',\n  'Teal',\n  'Thistle',\n  'Tomato',\n  'Turquoise',\n  'Violet',\n  'Wheat',\n  'White',\n  'WhiteSmoke',\n  'Yellow',\n  'YellowGreen',\n];\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: 345,\n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n  })\n);\n\nexport default function RecipeReviewCard() {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label='recipe' className={classes.avatar}>\n            R\n          </Avatar>\n        }\n        action={\n          <IconButton aria-label='settings'>\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title='September 14, 2016'\n        // subheader='September 14, 2016'\n      />\n\n      <CardContent>\n        <Typography variant='body2' color='textSecondary' component='p'>\n          This impressive paella is a perfect party dish and a fun meal to cook\n          together with your guests. Add 1 cup of frozen peas along with the\n          mussels, if you like.\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label='add to favorites'>\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label='share'>\n          <ShareIcon />\n        </IconButton>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label='show more'>\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout='auto' unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Method:</Typography>\n          <Typography paragraph>\n            Heat 1/2 cup of the broth in a pot until simmering, add saffron and\n            set aside for 10 minutes.\n          </Typography>\n          <Typography paragraph>\n            Heat oil in a (14- to 16-inch) paella pan or a large, deep skillet\n            over medium-high heat. Add chicken, shrimp and chorizo, and cook,\n            stirring occasionally until lightly browned, 6 to 8 minutes.\n            Transfer shrimp to a large plate and set aside, leaving chicken and\n            chorizo in the pan. Add pimentón, bay leaves, garlic, tomatoes,\n            onion, salt and pepper, and cook, stirring often until thickened and\n            fragrant, about 10 minutes. Add saffron broth and remaining 4 1/2\n            cups chicken broth; bring to a boil.\n          </Typography>\n          <Typography paragraph>\n            Add rice and stir very gently to distribute. Top with artichokes and\n            peppers, and cook without stirring, until most of the liquid is\n            absorbed, 15 to 18 minutes. Reduce heat to medium-low, add reserved\n            shrimp and mussels, tucking them down into the rice, and cook again\n            without stirring, until mussels have opened and rice is just tender,\n            5 to 7 minutes more. (Discard any mussels that don’t open.)\n          </Typography>\n          <Typography>\n            Set aside off of the heat to let rest for 10 minutes, and then\n            serve.\n          </Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Appbar from './components/Appbar';\nimport LogIn from './Views/LogIn';\nimport Home from './Views/Home';\nimport SignUp from './Views/SignUp';\nimport DisplayText from './Views/DisplayText';\nimport AddDatingText from './Views/AddDatingText';\n// import AAbla from \"./AAbla\";\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { AuthContextProvider } from './context/AuthContext';\nimport PrivateRoute from './components/PrivateRoute';\nimport Dashboard from './Views/Dashboard';\nimport SrchRes from './Views/SrchRes';\nimport { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport { theme } from './style/theme';\nimport AAbla from './AAbla';\nimport { useStyles } from './style/useStyles';\n// theme.palette.background.paper = theme.palette.primary.dark;\nfunction App() {\n  const classes = useStyles();\n  return (\n    <AuthContextProvider>\n      <div className={classes.rootOfroots}>\n        <CssBaseline />\n        <ThemeProvider theme={theme}>\n          <Router>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <Appbar />\n              <Switch>\n                <Route exact path='/login' children={<LogIn />} />\n                <Route exact path='/testing' children={<AAbla />} />\n                <PrivateRoute\n                  path='/search/:searchTerm'\n                  component={SrchRes}\n                  exact\n                />\n                <PrivateRoute\n                  path='/displaytext'\n                  component={DisplayText}\n                  exact\n                />\n                <PrivateRoute path='/dashboard' component={Dashboard} exact />\n                <PrivateRoute\n                  path='/adddatingtext'\n                  component={AddDatingText}\n                  exact\n                />\n                <Route exact path='/signup' children={<SignUp />} />\n                <Route exact path='/' children={<Home />} />\n              </Switch>\n            </MuiPickersUtilsProvider>\n          </Router>\n        </ThemeProvider>\n      </div>\n    </AuthContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n  useQuery,\n  gql\n} from \"@apollo/client\";\nimport { setContext } from '@apollo/client/link/context';\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    }\n  }\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\n\n\nReactDOM.render(\n   <ApolloProvider client={client}>\n  <React.StrictMode>\n    <App />\n    </React.StrictMode>\n    </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}